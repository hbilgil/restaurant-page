(()=>{var n={426:(n,t,e)=>{"use strict";e.d(t,{Z:()=>m});var o=e(537),r=e.n(o),a=e(645),i=e.n(a),c=e(667),s=e.n(c),A=new URL(e(374),e.b),d=new URL(e(113),e.b),l=new URL(e(125),e.b),p=i()(r()),u=s()(A),f=s()(d),h=s()(l);p.push([n.id,"/*Global prop declarations*/\n\n@font-face {\n    font-family: 'MyFont';\n    src: url("+u+");\n}\n\n@font-face {\n    font-family: 'MySecondFont';\n    src: url("+f+");\n}\n@font-face {\n    font-family: 'MyLogoFont';\n    src: url("+h+");\n}\n\n\n* {\n    margin:0;\n    padding:0;\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n    font-family: 'Roboto', sans-serif;\n}\n\n.flex {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nbody {\n    background-color: aliceblue;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: 100%;\n    width: 100%;\n}\n\nheader {\n    width: 100%;\n    padding: 20px;\n    justify-content: space-around !important;\n}\n\nheader .logo img {\n    width: 200px;\n    height: 200px;\n}\n\nheader h1 {\n    padding-top: 10px;\n    padding-left: 5px;\n    cursor: pointer;\n    color: red;\n    font-family: 'MyLogoFont';\n}\n\nspan {\n    color: gray;\n    font-family: 'MyLogoFont';\n}\n.logo.flex {\n    margin-top: 10px;\n}\n\nbutton {\n    padding: 5px 20px;\n    margin: 10px;\n    transition: all 0.5s;\n    font-size: 20px;\n    color: white;\n    font-weight: 600;\n    transition: color ease-out 0.6s;\n    border: none;\n    background-color: gray;\n    cursor: pointer;\n}\n\nbutton:hover {\n    color: red;\n    background-color: white;\n}\n\n.content {\n    width: 100%;\n    height: 66vh;\n}\n\n.content .one {\n    width: 60%;\n    padding: 0 100px;\n    position: relative;\n}\n\n.content .one h1 {\n    font-size: 60px;\n    font-family: 'MyFont';\n}\n\n.content .one img {\n    position: absolute;\n    top: 300px;\n    left: 750px;\n    width: 100px;\n    height: 100px;\n    margin-top: 8px;\n    margin-left: 10px;\n    background-color: aliceblue;\n}\n\n.content .one p {\n    margin-top: 40px;\n    font-size: 26px;\n    padding: 10px 0;\n    color: blue;\n    font-family: 'MySecondFont';\n}\n\n.content .two {\n    width: 40%;\n    position: relative;\n}\n\n.content .two img {\n    position: absolute;\n    width: 470px;\n    height: auto;\n    bottom: -80px;\n    left: 20px;\n    border: none;\n    border-radius: 50%;\n}\n\n.footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #393f4d;\n    color: white;\n    height: 30px;\n}\n\n.footer a {\n    text-decoration: none; /*list item without underlined links*/\n    color: white;\n}\n  \n.footer a:hover { /*when mouse moved around links at footer*/\n    color:fuchsia;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,2BAA2B;;AAE3B;IACI,qBAAqB;IACrB,4CAAmD;AACvD;;AAEA;IACI,2BAA2B;IAC3B,4CAAwC;AAC5C;AACA;IACI,yBAAyB;IACzB,4CAAwC;AAC5C;;;AAGA;IACI,QAAQ;IACR,SAAS;IACT,sBAAsB;IACtB,qBAAqB;IACrB,gBAAgB;IAChB,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,2BAA2B;IAC3B,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,WAAW;IACX,aAAa;IACb,wCAAwC;AAC5C;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,UAAU;IACV,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,yBAAyB;AAC7B;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,oBAAoB;IACpB,eAAe;IACf,YAAY;IACZ,gBAAgB;IAChB,+BAA+B;IAC/B,YAAY;IACZ,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,2BAA2B;AAC/B;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,WAAW;IACX,2BAA2B;AAC/B;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,UAAU;IACV,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,yBAAyB;IACzB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,qBAAqB,EAAE,qCAAqC;IAC5D,YAAY;AAChB;;AAEA,kBAAkB,0CAA0C;IACxD,aAAa;AACjB",sourcesContent:["/*Global prop declarations*/\n\n@font-face {\n    font-family: 'MyFont';\n    src: url('./fonts/Comfortaa-VariableFont_wght.ttf');\n}\n\n@font-face {\n    font-family: 'MySecondFont';\n    src: url('./fonts/YatraOne-Regular.ttf');\n}\n@font-face {\n    font-family: 'MyLogoFont';\n    src: url('./fonts/RockSalt-Regular.ttf');\n}\n\n\n* {\n    margin:0;\n    padding:0;\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n    font-family: 'Roboto', sans-serif;\n}\n\n.flex {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nbody {\n    background-color: aliceblue;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: 100%;\n    width: 100%;\n}\n\nheader {\n    width: 100%;\n    padding: 20px;\n    justify-content: space-around !important;\n}\n\nheader .logo img {\n    width: 200px;\n    height: 200px;\n}\n\nheader h1 {\n    padding-top: 10px;\n    padding-left: 5px;\n    cursor: pointer;\n    color: red;\n    font-family: 'MyLogoFont';\n}\n\nspan {\n    color: gray;\n    font-family: 'MyLogoFont';\n}\n.logo.flex {\n    margin-top: 10px;\n}\n\nbutton {\n    padding: 5px 20px;\n    margin: 10px;\n    transition: all 0.5s;\n    font-size: 20px;\n    color: white;\n    font-weight: 600;\n    transition: color ease-out 0.6s;\n    border: none;\n    background-color: gray;\n    cursor: pointer;\n}\n\nbutton:hover {\n    color: red;\n    background-color: white;\n}\n\n.content {\n    width: 100%;\n    height: 66vh;\n}\n\n.content .one {\n    width: 60%;\n    padding: 0 100px;\n    position: relative;\n}\n\n.content .one h1 {\n    font-size: 60px;\n    font-family: 'MyFont';\n}\n\n.content .one img {\n    position: absolute;\n    top: 300px;\n    left: 750px;\n    width: 100px;\n    height: 100px;\n    margin-top: 8px;\n    margin-left: 10px;\n    background-color: aliceblue;\n}\n\n.content .one p {\n    margin-top: 40px;\n    font-size: 26px;\n    padding: 10px 0;\n    color: blue;\n    font-family: 'MySecondFont';\n}\n\n.content .two {\n    width: 40%;\n    position: relative;\n}\n\n.content .two img {\n    position: absolute;\n    width: 470px;\n    height: auto;\n    bottom: -80px;\n    left: 20px;\n    border: none;\n    border-radius: 50%;\n}\n\n.footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #393f4d;\n    color: white;\n    height: 30px;\n}\n\n.footer a {\n    text-decoration: none; /*list item without underlined links*/\n    color: white;\n}\n  \n.footer a:hover { /*when mouse moved around links at footer*/\n    color:fuchsia;\n}"],sourceRoot:""}]);const m=p},645:n=>{"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},667:n=>{"use strict";n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{"use strict";var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],A=o.base?s[0]+o.base:s[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var f=r(u,o);o.byIndex=c,t.splice(c,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);t[c].references--}for(var s=o(n,r),A=0;A<a.length;A++){var d=e(a[A]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=s}}},569:n=>{"use strict";var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{"use strict";n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{"use strict";n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{"use strict";n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{"use strict";n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},622:()=>{},83:()=>{},374:(n,t,e)=>{"use strict";n.exports=e.p+"4d2ab5de91c4d193a69f.ttf"},125:(n,t,e)=>{"use strict";n.exports=e.p+"95f10efb43f0ccd46405.ttf"},113:(n,t,e)=>{"use strict";n.exports=e.p+"1a5c29426ff2e36dc5cc.ttf"}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{"use strict";const n=e.p+"8a7d6f6ad8986cfda5f7.png",t=e.p+"09172b49345b975cfd36.jpeg",o=function(){const e=document.getElementById("main");e.textContent="";const o=document.createElement("div");return o.classList.add("content","flex"),o.appendChild(function(){const t=document.createElement("div");t.classList.add("one");const e=document.createElement("h1");t.appendChild(e),e.textContent="Eat, drink and live free. There's no telling what might happen tomorrow";const o=new Image;o.src=n,e.appendChild(o);const r=document.createElement("p");return t.appendChild(r),r.textContent="Eat whatever you want, and if someone tries to lecture you about your weight, eat them too!",t}()),o.appendChild(function(){const n=document.createElement("div");n.classList.add("two");const e=new Image;return e.src=t,n.appendChild(e),n}()),e.appendChild(o),o},r=function(){const t=document.getElementById("main");t.textContent="";const e=document.createElement("div");e.classList.add("content");const o=document.createElement("h1");e.appendChild(o),o.textContent="About Us";const r=document.createElement("p");e.appendChild(r),r.textContent="This story started one day when my mother left us at home with my cousin. We were hungry; I made menemen, potato salad and rice. I am only 9 years old. Even though I was shy at first when my mother returned home, I was very pleased with the way she appreciated me and liked my food. That dream has started since then. It's a dream that lasted 40 years. Even though the years passed in life abroad by working in different sectors, my dream of cooking for people had never passed. So that I was always in the kitchen in family gatherings and in various environments and cooked with pleasure. That is, until my brother told me, sister, that you should do this professionally now. The story of the flavors were decided in December 2017 and on the 8th January of 2018, began. As the smells of food spread around in my kitchen, it didn't take long for my taste to be heard, as the customers informed the others. Thank you to everyone who supported me during this process. We decided to open hearty delicacies at the end of the first year. I hope we will share many delicious flavors with you here. Let's not forget that everyone is full with what they eat, but being full is another feeling.";const a=new Image;return a.src=n,e.appendChild(a),t.appendChild(e),e};var a=e(83),i=e.n(a),c=e(622),s=e.n(c);const A=e.p+"6d08b1511ccf0700134b.png";var d=e(379),l=e.n(d),p=e(795),u=e.n(p),f=e(569),h=e.n(f),m=e(565),C=e.n(m),g=e(216),y=e.n(g),I=e(589),B=e.n(I),b=e(426),x={};x.styleTagTransform=B(),x.setAttributes=C(),x.insert=h().bind(null,"head"),x.domAPI=u(),x.insertStyleElement=y(),l()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals,function(){const n=document.getElementById("content");n.appendChild(function(){const n=document.createElement("header");return n.classList.add("flex"),n.appendChild(function(){const n=document.createElement("div");n.classList.add("logo","flex");const t=new Image;t.src=A,n.appendChild(t);const e=document.createElement("h1");e.textContent="Doyuran",n.appendChild(e);const o=document.createElement("span");return e.appendChild(o),o.textContent=" Restaurant",n}()),n.appendChild(function(){const n=document.createElement("div");n.classList.add("flex");const t=document.createElement("button");t.textContent="Home",t.onclick=o;const e=document.createElement("button");e.textContent="About",e.onclick=r;const a=document.createElement("button");a.textContent="Menu",a.onclick=i();const c=document.createElement("button");return c.textContent="Contact Us",c.onclick=s(),n.appendChild(t),n.appendChild(e),n.appendChild(a),n.appendChild(c),n}()),n}()),n.appendChild(function(){const n=document.createElement("div");return n.classList.add("main-container"),n.setAttribute("id","main"),n}()),n.appendChild(function(){const n=document.createElement("div");n.classList.add("footer");const t=document.createElement("p");t.textContent=`Copyright © ${(new Date).getFullYear()}`,n.appendChild(t);const e=document.createElement("a");return e.href="https://github.com/hbilgil",e.setAttribute("target","_blank"),e.textContent=" Halil Bilgil",t.appendChild(e),n}()),o()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,